{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {
    "id": { "$ref": "scrambled_id.json" },
    "first_name": { "type": "string" },
    "last_name": { "type": "string" },
    "display_name": { "type": "string" },
    "page_name": { "type": "string", "pattern": "^[A-Za-z]+_[A-Za-z]+[0-9]*$" },
    "permalink": { "type": "string", "format": "uri" },
    "employment_status": {
      "enum": ["ENTREPRENEUR", "FREELANCER", "EMPLOYEE", "EXECUTIVE", "RECRUITER", "PUBLIC_SERVANT", "STUDENT", "UNEMPLOYED", "RETIRED"]
    },
    "gender": { "enum": ["m", "f"] },
    "birth_date": {
      "description": "You may have no access to the birth_date (all values null), only access to the day and month (year is null) or to the full date (no field is null).",
      "type": "object",
      "properties": {
        "day": { "type": ["int", "null"] },
        "month": { "type": ["int", "null" ] },
        "year": { "type": ["int", "null" ] }
      },
      "required": ["day", "month", "year"]
    },
    "active_email": {
      "type": ["string", "null"],
      "format": "email",
      "decription": "You can only get this information for the current user. For all other users, the email address can be found under private_address/email or business_address/email, if access was granted."
    },
    "time_zone": {
      "type": "object",
      "properties": {
        "name": { "type": "string", "description": "A list of valid time zones can be obtained from https://www.iana.org/time-zones" },
        "utc_offset": { "type": "number" }
      },
      "required": ["name", "utc_offset"]
    },
    "premium_services": {
      "type": "array",
      "items": { "enum": ["SEARCH", "PRIVATEMESSAGES"] },
      "uniqueItems": "true"
    },
    "badges": {
      "description": "While premium refers to membership types, other badges refer to the user's status (moderator, etc.) Badges are only used for front-end purposes. A distinction between premium and basic is considered a bad practice: consumers should use the premium-services list for the specific information they want to check!",
      "type": "array",
      "items": { "enum": ["PREMIUM", "MODERATOR"] },
      "uniqueItems": "true"
    },
    "wants": {
      "type": "string",
      "description": "This is a comma separated list."
    },
    "haves": {
      "type": "string",
      "description": "This is a comma separated list."
    },
    "interests": {
      "type": "string",
      "description": "This is a comma separated list."
    },
    "organisation_member": {
      "type": "string",
      "description": "This is a comma separated list."
    },
    "languages": {
      "type": "object",
      "description": "The list of languages can include the following abbreviations: de en, es, fi, fr, hu, it, ja, ko, nl, pl, pt, ru, sv, tr, zh, ro, no, cs, el, da, ar, he.",
      "patternProperties": {
        "^[a-z]{2}$": { "enum": [null, "BASIC", "GOOD", "FLUENT", "NATIVE"] }
      },
      "additionalProperties": false
    },
    "private_address": { "$ref": "../_models/address.json" },
    "business_address": { "$ref": "../_models/address.json" },
    "web_profiles": {
      "type": "object",
      "properties": {
        "blog":           { "type": "array", "items": { "type": "string", "format": "uri"} },
        "delicious":      { "type": "array", "items": { "type": "string", "format": "uri"} },
        "digg":           { "type": "array", "items": { "type": "string", "format": "uri"} },
        "doodle":         { "type": "array", "items": { "type": "string", "format": "uri"} },
        "dopplr":         { "type": "array", "items": { "type": "string", "format": "uri"} },
        "ebay":           { "type": "array", "items": { "type": "string", "format": "uri"} },
        "facebook":       { "type": "array", "items": { "type": "string", "format": "uri"} },
        "flickr":         { "type": "array", "items": { "type": "string", "format": "uri"} },
        "foursquare":     { "type": "array", "items": { "type": "string", "format": "uri"} },
        "github":         { "type": "array", "items": { "type": "string", "format": "uri"} },
        "google_plus":    { "type": "array", "items": { "type": "string", "format": "uri"} },
        "homepage":       { "type": "array", "items": { "type": "string", "format": "uri"} },
        "last_fm":        { "type": "array", "items": { "type": "string", "format": "uri"} },
        "lifestream_fm":  { "type": "array", "items": { "type": "string", "format": "uri"} },
        "mindmeister":    { "type": "array", "items": { "type": "string", "format": "uri"} },
        "mister_wong":    { "type": "array", "items": { "type": "string", "format": "uri"} },
        "other":          { "type": "array", "items": { "type": "string", "format": "uri"} },
        "photobucket":    { "type": "array", "items": { "type": "string", "format": "uri"} },
        "plazes":         { "type": "array", "items": { "type": "string", "format": "uri"} },
        "qype":           { "type": "array", "items": { "type": "string", "format": "uri"} },
        "reddit":         { "type": "array", "items": { "type": "string", "format": "uri"} },
        "second_life":    { "type": "array", "items": { "type": "string", "format": "uri"} },
        "sevenload":      { "type": "array", "items": { "type": "string", "format": "uri"} },
        "slideshare":     { "type": "array", "items": { "type": "string", "format": "uri"} },
        "sorceforge":     { "type": "array", "items": { "type": "string", "format": "uri"} },
        "spreed":         { "type": "array", "items": { "type": "string", "format": "uri"} },
        "stumble_upon":   { "type": "array", "items": { "type": "string", "format": "uri"} },
        "twitter":        { "type": "array", "items": { "type": "string", "format": "uri"} },
        "vimeo":          { "type": "array", "items": { "type": "string", "format": "uri"} },
        "wikipedia":      { "type": "array", "items": { "type": "string", "format": "uri"} },
        "yelp":           { "type": "array", "items": { "type": "string", "format": "uri"} },
        "youtube":        { "type": "array", "items": { "type": "string", "format": "uri"} },
        "zoominfo":       { "type": "array", "items": { "type": "string", "format": "uri"} }
      },
      "required": []
    },
    "instant_messaging_accounts": {
      "type": "object",
      "properties": {
        "skype":      { "type": "string" },
        "icq":        { "type": "string" },
        "msn":        { "type": "string" },
        "yahoo":      { "type": "string" },
        "aim":        { "type": "string" },
        "jabber":     { "type": "string" },
        "googletalk": { "type": "string" }
      },
      "required": []
    },
    "professional_experience": {
      "type": "object",
      "properties": {
        "primary_company": { "$ref": "../_models/professional_experience.json" },
        "companies": { "type": "array", "items": { "$ref": "../_models/professional_experience.json" } },
        "awards": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name":          { "type": "string" },
              "date_awarded":  { "type": "integer" },
              "url":           { "type": ["null", "string"], "format": "uri" }
            }
          }
        },
        "non_primary_companies": {
          "type": "object",
          "description": "This field is deprecated. Don't use it any more. It'll be removed in the future."
        }
      }
    },
    "educational_background": {
      "type": "object",
      "properties": {
        "degree": {
          "type": ["string", "null"],
          "description": "The latest awarded academic degree."
        },
        "primary_school": {
          "anyOf": [
            { "$ref": "../_models/school.json" },
            { "type": "null" }
          ]
        },
        "schools": {
          "type": "array",
          "items": { "$ref": "../_models/school.json" }
        },
        "qualifications": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "photo_urls": { "$ref": "../_models/photo_urls.json" }
  },
  "required": ["id"]
}
